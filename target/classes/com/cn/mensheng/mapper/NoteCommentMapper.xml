<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cn.mensheng.mapper.NoteCommentMapper">
  <resultMap id="BaseResultMap" type="com.cn.mensheng.dto.NoteComment">
    <id column="stuId" jdbcType="INTEGER" property="stuId" />
    <id column="teacherId" jdbcType="INTEGER" property="teacherId" />
    <id column="noteId" jdbcType="INTEGER" property="noteId" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="commentTime" jdbcType="TIMESTAMP" property="commentTime" />
    <result column="like_num" jdbcType="INTEGER" property="like_num" />
  </resultMap>
  <sql id="Base_Column_List">
    stuId, teacherId, noteId, content, commentTime, like_num
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.cn.mensheng.dto.NoteCommentKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from notecomment
    where stuId = #{stuId,jdbcType=INTEGER}
      and teacherId = #{teacherId,jdbcType=INTEGER}
      and noteId = #{noteId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.cn.mensheng.dto.NoteCommentKey">
    delete from notecomment
    where stuId = #{stuId,jdbcType=INTEGER}
      and teacherId = #{teacherId,jdbcType=INTEGER}
      and noteId = #{noteId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cn.mensheng.dto.NoteComment">
    insert into notecomment (stuId, teacherId, noteId, 
      content, commentTime, like_num
      )
    values (#{stuId,jdbcType=INTEGER}, #{teacherId,jdbcType=INTEGER}, #{noteId,jdbcType=INTEGER}, 
      #{content,jdbcType=VARCHAR}, #{commentTime,jdbcType=TIMESTAMP}, #{like_num,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cn.mensheng.dto.NoteComment">
    insert into notecomment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="stuId != null">
        stuId,
      </if>
      <if test="teacherId != null">
        teacherId,
      </if>
      <if test="noteId != null">
        noteId,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="commentTime != null">
        commentTime,
      </if>
      <if test="like_num != null">
        like_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="stuId != null">
        #{stuId,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null">
        #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="noteId != null">
        #{noteId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="commentTime != null">
        #{commentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="like_num != null">
        #{like_num,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cn.mensheng.dto.NoteComment">
    update notecomment
    <set>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="commentTime != null">
        commentTime = #{commentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="like_num != null">
        like_num = #{like_num,jdbcType=INTEGER},
      </if>
    </set>
    where stuId = #{stuId,jdbcType=INTEGER}
      and teacherId = #{teacherId,jdbcType=INTEGER}
      and noteId = #{noteId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cn.mensheng.dto.NoteComment">
    update notecomment
    set content = #{content,jdbcType=VARCHAR},
      commentTime = #{commentTime,jdbcType=TIMESTAMP},
      like_num = #{like_num,jdbcType=INTEGER}
    where stuId = #{stuId,jdbcType=INTEGER}
      and teacherId = #{teacherId,jdbcType=INTEGER}
      and noteId = #{noteId,jdbcType=INTEGER}
  </update>
</mapper>